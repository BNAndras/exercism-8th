: incnum 
  '0 n:- n:1+ '0 n:+
;

: +nth_in_map 
  dup >r s:@ incnum r> swap s:!
;

: roll>map 
  "000000" swap ( n:1- +nth_in_map ) a:each! swap
; 

: ones \ s a --  a n
  drop
  roll>map 0 s:@ '0 n:- 1 * nip nip
;

: twos \ s a --  a n
  drop
  roll>map 1 s:@ '0 n:- 2 * nip nip
;

: threes \ s a --  a n
  drop
  roll>map 2 s:@ '0 n:- 3 * nip nip
;

: fours \ s a --  a n
  drop
  roll>map 3 s:@ '0 n:- 4 * nip nip
;

: fives \ s a --  a n
  drop
  roll>map 4 s:@ '0 n:- 5 * nip nip
;

: sixes \ s a --  a n
  drop
  roll>map 5 s:@ '0 n:- 6 * nip nip
;

: little_straight \ a -- a n
  drop
  roll>map "111110" s:= if 30 else 0 then nip
;

: big_straight \ a -- a n
  drop
  roll>map "011111" s:= if 30 else 0 then nip
;

: finda \ s -- n
     s:search null? if drop drop 0 else nip then
   ;

: full_house 
  drop
  roll>map
  dup dup "2" finda swap "3" finda \ n n
  2dup 0 n:= swap 0 n:= or if 2drop 2drop 0 ;then
  n:cmp \ if pos of 3 is greater than pos of 2 19 else 16
  1 n:= if drop drop  19 ;then
  drop drop 16 
  ; 

: choice 
  drop
  dup ' n:+ 0 a:reduce nip
;

: yacht 
  drop
  roll>map "5" s:search null? if drop drop drop 0 else drop drop drop 50 then
;

: four_of_a_kind
  drop
  roll>map "4" s:search null? !if n:1+ 4 * nip nip ;then
  drop "5" s:search null? !if n:1+ 4 * nip nip ;then
  0 nip nip nip
;

: is_ones dup "ones" s:= ;
: is_twos dup "twos" s:= ;
: is_threes dup "threes" s:= ;
: is_fours dup "fours" s:= ;
: is_fives dup "fives" s:= ;
: is_sixes dup "sixes" s:= ;
: is_full_house dup "full house" s:= ;
: is_little_straight dup "little straight" s:= ;
: is_big_straight dup "big straight" s:= ;
: is_four_of_a_kind dup "four of a kind" s:= ;
: is_choice dup "choice" s:= ;
: is_yacht dup "yacht" s:= ;


: play_yacht 
    is_ones if ones ;then 
    is_twos if twos ;then
    is_threes if threes ;then
    is_fours if fours ;then
    is_fives if fives ;then 
    is_sixes if sixes ;then
    is_little_straight if little_straight ;then
    is_big_straight if big_straight ;then
    is_full_house if full_house ;then
    is_choice if choice ;then
    is_four_of_a_kind if four_of_a_kind ;then
    is_yacht if yacht ;then
    drop drop 0
  ;

